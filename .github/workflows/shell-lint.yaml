# .github/workflows/lint.yml
name: shell-lint

on:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install linters
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck shfmt python3-pip
          python3 -m pip install --user --no-cache-dir bashate
          echo "$HOME/.local/bin" >>"$GITHUB_PATH"

      - name: ShellCheck (static analysis)
        run: |
          set -euo pipefail

          mapfile -t shell_files < <(git ls-files '*.sh' '*.bash' '*.ksh' '*.zsh')
          if [ "${#shell_files[@]}" -eq 0 ]; then
              # Fall back to globbing in case we are running outside of a git checkout
              shopt -s globstar nullglob
              shell_files=(**/*.sh **/*.bash **/*.ksh **/*.zsh)
              shopt -u globstar nullglob
          fi

          if [ "${#shell_files[@]}" -eq 0 ]; then
              echo "No shell scripts detected — skipping ShellCheck."
              exit 0
          fi

          shellcheck --external-sources --severity=warning "${shell_files[@]}"

      - name: bashate (style guide)
        run: |
          set -euo pipefail

          mapfile -t shell_files < <(git ls-files '*.sh' '*.bash' '*.ksh' '*.zsh')
          if [ "${#shell_files[@]}" -eq 0 ]; then
              shopt -s globstar nullglob
              shell_files=(**/*.sh **/*.bash **/*.ksh **/*.zsh)
              shopt -u globstar nullglob
          fi

          if [ "${#shell_files[@]}" -eq 0 ]; then
              echo "No shell scripts detected — skipping bashate."
              exit 0
          fi

          bashate --error "${shell_files[@]}"

      - name: shfmt (format check, 4-space indent)
        run: |
          set -euo pipefail

          mapfile -t shell_files < <(git ls-files '*.sh' '*.bash' '*.ksh' '*.zsh')
          if [ "${#shell_files[@]}" -eq 0 ]; then
              shopt -s globstar nullglob
              shell_files=(**/*.sh **/*.bash **/*.ksh **/*.zsh)
              shopt -u globstar nullglob
          fi

          if [ "${#shell_files[@]}" -eq 0 ]; then
              echo "No shell scripts detected — skipping shfmt."
              exit 0
          fi

          shfmt -d -i 4 -ci "${shell_files[@]}"